mycor=function(s1,s2) {
ap1=Ad(getSymbols(s1,auto.assign=FALSE,from="2012-01-02"))
ap2=Ad(getSymbols(s2,auto.assign=FALSE,from="2012-01-02"))
n=length(ap2)  ## this is how many days we want to work with
### some math...we want to start at day 180 and take the 
### correlation from day 1 to day 180
### we then contue and stop at day n-179
### store the results in vals
nn=n-179
vals=1:nn
for(i in 180:n) {
 p1 = ap1[(i-179):i]
 p2 = ap2[(i-179):i]
 vals[i-179]=cor(p1,p2)
}
plot(EMA(vals),type="l")
}


mycoin=function(s1,s2) {
ap1=Ad(getSymbols(s1,auto.assign=FALSE,from="2012-01-02"))
ap2=Ad(getSymbols(s2,auto.assign=FALSE,from="2012-01-02"))
n=length(ap2)
nn=n-179
vals=1:nn
for(i in 180:n) {
 p1 = ap1[(i-179):i]
 p2 = ap2[(i-179):i]
 fit=lm(p1~-1+p2)
 beta=coef(fit)[1]
 sprd=p1-beta*p2
 sprd=as.numeric(sprd)
 vals[i-179]=1-adf.test(sprd,alternative="stationary",k=0)$p.value
 }
plot(EMA(vals),type="l")
}


myvals=function(s1,s2) {
ap1=Ad(getSymbols(s1,auto.assign=FALSE,from="2013-01-02"))
ap2=Ad(getSymbols(s2,auto.assign=FALSE,from="2013-01-02"))
n=length(ap2)
nn=n-179
vals=1:nn
 i=n
 p1 = ap1[(i-179):i]
 p2 = ap2[(i-179):i]
 fit=lm(p1~-1+p2)
 beta=coef(fit)[1]
 sprd=p1-beta*p2
 sprd=as.numeric(sprd)
 cat("Cointegration p=value = ",adf.test(sprd,alternative="stationary",k=0)$p.value,"\n")
 cat("Correlation = ",cor(p1,p2),"\n")
 }




pairs.trade <- function(stock1, stock2,
 from = "2010-01-01", to = Sys.Date(),
 ma.days = 14,
 method = "diff",
 threshold = 2,
 closeout = T){
 require(quantmod)

 x1 <- getSymbols(stock1, auto.assign = F, from = from, to = to)
 x1 <- as.numeric(Ad(x1))

 x2 <- getSymbols(stock2, auto.assign = F, from = from, to = to)
 x2 <- as.numeric(Ad(x2))

 if (method == "diff"){
 x1.norm <- (x1 - runMean(x1, n = ma.days))/runSD(x1, ma.days)
 x2.norm <- (x2 - runMean(x2, n = ma.days))/runSD(x2, ma.days)
 out.ts <- x1.norm - x2.norm
 } else if (method == "ratio"){
 ts <- x1/x2
 out.ts <- (ts - runMean(ts, n = ma.days))/runSD(ts, ma.days)
 }
 numdays <- length(out.ts)

 # initialize quantities
 x1.traded = x2.traded = 0
 current = "neither"
 profit = 0
 maxprofit = minprofit = numtrades = winners = 0

 for(i in ma.days:numdays){
 if(out.ts[i] < -threshold & current == "neither"){
 x1.traded = (10000/x1[i])
 x2.traded = (-10000/x2[i])
 current = "x2"
 numtrades = numtrades + 1
 ##print(paste("Short", stock2, "at", x2[i],
 ##"and Long", stock1, "at", x1[i]))
 }

 if(out.ts[i] > threshold & current == "neither"){
 x1.traded = (-10000/x1[i])
 x2.traded = (10000/x2[i])
 current = "x1"
 numtrades = numtrades + 1
 ##print(paste("Short", stock1, "at", x1[i],
 ##"and Long", stock2, "at", x2[i]))
 }

 if((out.ts[i] > 0 & current == "x2") | (out.ts[i] < 0 & current == "x1")){
 profit.temp = x1.traded*x1[i] + x2.traded*x2[i]
 profit = profit + profit.temp
 winners = winners + (profit.temp > 0)
 maxprofit = max(maxprofit,profit.temp)
 minprofit = min(minprofit,profit.temp)
 x1.traded = 0
 x2.traded = 0
 current = "neither"
 }
 }

 # Note: this optional closing out is outside the for loop!
 if (x1.traded != 0 & closeout == T){
 profit.temp = x1.traded*x1[i] + x2.traded*x2[i]
 profit = profit + profit.temp
 winners = winners + (profit.temp > 0)
 maxprofit = max(maxprofit,profit.temp)
 minprofit = min(minprofit,profit.temp)
 x1.traded = 0
 x2.traded = 0
 current = "neither"
 }

 # Counting issue
 if (x1.traded != 0 & closeout == F){
 numtrades = numtrades - 1
 }

 # tabulate results
 results = list(Winners = winners,
 number.of.trades = numtrades,
 winning.percentage = 100*winners/numtrades,
 max.profit = maxprofit,
 min.profit = minprofit,
 profit = profit)
 return(results)
}

