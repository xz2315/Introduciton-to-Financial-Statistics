ap1=Ad(getSymbols(s1,auto.assign=FALSE,from="2013-01-02"))
ap2=Ad(getSymbols(s2,auto.assign=FALSE,from="2013-01-02"))
n=length(ap2)
nn=n-179
vals=1:nn
i=n
p1 = ap1[(i-179):i]
p2 = ap2[(i-179):i]
fit=lm(p1~-1+p2)
beta=coef(fit)[1]
sprd=p1-beta*p2
sprd=as.numeric(sprd)
cat("Cointegration p-value = ",adf.test(sprd,alternative="stationary",k=0)$p.value,"\n")
cat("Correlation = ",cor(p1,p2),"\n")
}
myvals("AAPL","SPY")
library(quantmod)
library(tseries)
# Calculates the last day cointegration p-value (ADF test) and Correlation, using prior 180 days
myvals=function(s1,s2) {
ap1=Ad(getSymbols(s1,auto.assign=FALSE,from="2013-01-02"))
ap2=Ad(getSymbols(s2,auto.assign=FALSE,from="2013-01-02"))
n=length(ap2)
nn=n-179
vals=1:nn
i=n
p1 = ap1[(i-179):i]
p2 = ap2[(i-179):i]
fit=lm(p1~-1+p2)
beta=coef(fit)[1]
sprd=p1-beta*p2
sprd=as.numeric(sprd)
cat("Cointegration p-value = ",adf.test(sprd,alternative="stationary",k=0)$p.value,"\n")
cat("Correlation = ",cor(p1,p2),"\n")
}
myvals("AAPL","SPY")
library(quantmod)
library(tseries)
# Calculates correlation using 180-day rolling average and then plot
mycor=function(s1,s2) {
ap1=Ad(getSymbols(s1,auto.assign=FALSE,from="2012-01-02"))
ap2=Ad(getSymbols(s2,auto.assign=FALSE,from="2012-01-02"))
n=length(ap2)  ## this is how many days we want to work with
### some math...we want to start at day 180 and take the
### correlation from day 1 to day 180
### we then continue and stop at day n-179
### store the results in vals
nn=n-179 # nn is the final length of correlation
vals=1:nn # initialize place-holder
for(i in 180:n) {
p1 = ap1[(i-179):i]
p2 = ap2[(i-179):i]
vals[i-179]=cor(p1,p2) # correlation
}
plot(EMA(vals),type="l") # plot the correlation over time
}
# Calculates co-integration p-values using 180-day rolling average and then plot
mycoin=function(s1,s2) {
ap1=Ad(getSymbols(s1,auto.assign=FALSE,from="2012-01-02"))
ap2=Ad(getSymbols(s2,auto.assign=FALSE,from="2012-01-02"))
n=length(ap2)
nn=n-179
vals=1:nn
for(i in 180:n) {
p1 = ap1[(i-179):i]
p2 = ap2[(i-179):i]
fit=lm(p1~-1+p2)
beta=coef(fit)[1]
sprd=p1-beta*p2
sprd=as.numeric(sprd)
# Augmented Dickey-Fuller Test, Alternative: Stationary. Want to Reject with small p-value
# Want larger than 0.95 (1-p value)
vals[i-179]=1-adf.test(sprd,alternative="stationary",k=0)$p.value
}
plot(EMA(vals),type="l")
}
# Calculates the last day cointegration p-value (ADF test) and Correlation, using prior 180 days
myvals=function(s1,s2) {
ap1=Ad(getSymbols(s1,auto.assign=FALSE,from="2013-01-02"))
ap2=Ad(getSymbols(s2,auto.assign=FALSE,from="2013-01-02"))
n=length(ap2)
nn=n-179
vals=1:nn
i=n
p1 = ap1[(i-179):i]
p2 = ap2[(i-179):i]
fit=lm(p1~-1+p2)
beta=coef(fit)[1]
sprd=p1-beta*p2
sprd=as.numeric(sprd)
cat("Cointegration p-value = ",adf.test(sprd,alternative="stationary",k=0)$p.value,"\n")
cat("Correlation = ",cor(p1,p2),"\n")
}
# Implement Brazilian Method(diff) and Pairslog.com Method(ratio)
pairs.trade <- function(stock1, stock2,from = "2010-01-01", to = Sys.Date(),ma.days,method,threshold,closeout){
require(quantmod)
x1 <- getSymbols(stock1, auto.assign = F, from = from, to = to)
x1 <- as.numeric(Ad(x1))
x2 <- getSymbols(stock2, auto.assign = F, from = from, to = to)
x2 <- as.numeric(Ad(x2))
if (method == "diff"){
x1.norm <- (x1 - runMean(x1, n = ma.days))/runSD(x1, ma.days)
x2.norm <- (x2 - runMean(x2, n = ma.days))/runSD(x2, ma.days)
out.ts <- x1.norm - x2.norm
}
else if (method == "ratio"){
ts <- x1/x2
out.ts <- (ts - runMean(ts, n = ma.days))/runSD(ts, ma.days)
}
numdays <- length(out.ts)
# initialize quantities
x1.traded = x2.traded = 0
current = "neither"
profit = 0
all.profit=c()
maxprofit = minprofit = numtrades = winners = 0
for(i in ma.days:numdays){
# If diff or ratio out of range <-2, then long x1 and short x2
if(out.ts[i] < -threshold & current == "neither"){
x1.traded = (10000/x1[i])
x2.traded = (-10000/x2[i])
current = "x2"
numtrades = numtrades + 1
#print(paste("Short", stock2, "at", x2[i], "and Long", stock1, "at", x1[i]))
}
if(out.ts[i] > threshold & current == "neither"){
# If diff or ratio out of range >2, then short x1 and long x2
x1.traded = (-10000/x1[i])
x2.traded = (10000/x2[i])
current = "x1"
numtrades = numtrades + 1
#print(paste("Short", stock1, "at", x1[i],"and Long", stock2, "at", x2[i]))
}
# If current is short X2, it means diff/ratio is <-2 when traded executed, now the sign switchs, we should close the trade
# If current is short X1, it means diff/ratio is >+2 when traded executed, now the sign switchs, we should close the trade
if((out.ts[i] > 0 & current == "x2") | (out.ts[i] < 0 & current == "x1")){
profit.temp = x1.traded*x1[i] + x2.traded*x2[i]
all.profit=c(all.profit, profit.temp)
profit = profit + profit.temp
winners = winners + (profit.temp > 0)
maxprofit = max(maxprofit,profit.temp)
minprofit = min(minprofit,profit.temp)
x1.traded = 0
x2.traded = 0
current = "neither"
#print(paste("Closeout", stock1, "at", x1[i], "and", stock2, "at", x2[i]))
}
}
# Note: this optional closing out is outside the for loop!
# If x1 is still on trade and we require closeout at the end of the period
# At the end of the loop, i=numdays
if (x1.traded != 0 & closeout == T){
profit.temp = x1.traded*x1[i] + x2.traded*x2[i]
all.profit=c(all.profit, profit.temp)
profit = profit + profit.temp
winners = winners + (profit.temp > 0)
maxprofit = max(maxprofit,profit.temp)
minprofit = min(minprofit,profit.temp)
x1.traded = 0
x2.traded = 0
current = "neither"
}
# Counting issue
if (x1.traded != 0 & closeout == F){
numtrades = numtrades - 1
}
# average of winning trades and average of losing trades
ave.winning=mean(all.profit[all.profit>0])
ave.losing=mean(all.profit[all.profit<0])
# Sharpe Ratio
sharpe.ratio=mean(all.profit)/sd(all.profit)
# tabulate results as a list
results = list(Winners = winners,
number.of.trades = numtrades,
winning.percentage = 100*winners/numtrades,
max.profit = maxprofit,
min.profit = minprofit,
ave.losing = ave.losing,
ave.winning=ave.winning,
profit = profit,
all.profit=all.profit,
sharpe.ratio=sharpe.ratio
)
return(results)
}
myvals('BKEP','DSX')
# Brazilian Method(diff) and Pairslog.com Method(ratio)
diff.result<-pairs.trade('BKEP','DSX',from = "2013-10-01", to = Sys.Date(),ma.days = 14,method = "diff",threshold = 2,closeout = F)
ratio.result<-pairs.trade('BKEP','DSX',from = "2013-10-01", to = Sys.Date(),ma.days = 14,method = "ratio",threshold = 2,closeout = F)
diff.result
cat("The Brazilian Method(diff) approach would result in final profit of $", diff.result$profit,'\n')
cat("The Pairslog.com Method(ratio) approach would result in final profit of $", ratio.result$profit,'\n')
cat("The Brazilian Method(diff) approach would trigger", diff.result$number.of.trades,'pair trades.', diff.result$Winners, "are profitable.\n")
cat("The Pairslog.com Method(ratio) approach would result in final profit of $", ratio.result$number.of.trades,'pair trades.', ratio.result$Winners, "are profitable.\n")
cat("The Brazilian Method(diff) approach would trigger", diff.result$number.of.trades,'pair trades.', "Among them,", diff.result$Winners, "are profitable.\n")
cat("The Pairslog.com Method(ratio) approach would result in final profit of $", ratio.result$number.of.trades,'pair trades.', "Among them,", ratio.result$Winners, "are profitable.\n")
cat("For Brazilian Method(diff) approach, the best pair trade made a profit of $", diff.result$max.profit, "the worst pair trade made a profit of $", diff.result$min.profit, "\n")
cat("For Pairslog.com Method(ratio) approach, the best pair trade made a profit of $", ratio.result$max.profit, "the worst pair trade made a profit of $", ratio.result$min.profit, "\n")
diff.result
ratio.result
sharpeRatio(diff.result$all.profit,FUN="StdDev")
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
sharpeRatio(diff.result$all.profit,FUN="StdDev")
diff.result$all.profit
sharpeRatio(diff.result$all.profit,FUN="StdDev")
library(PerformanceAnalytics)
SharpeRatio(diff.result$all.profit,FUN="StdDev")
diff.result
ratio.result
diff.result$winning.percentage
ratio.result$winning.percentage
diff.result$sharpe.ratio
ratio.result$sharpe.ratio
diff.result$profit
ratio.result$profit
diff.result$ave.winning
ratio.result$ave.winning
diff.result$ave.losing
ratio.result$ave.losing
diff.result$number.of.trades
ratio.result$number.of.trades
diff.result$winning.percentage
ratio.result$winning.percentage
diff.result$sharpe.ratio
ratio.result$sharpe.ratio
diff.result$profit
ratio.result$profit
diff.result$ave.winning
ratio.result$ave.winning
diff.result$ave.losing
ratio.result$ave.losing
diff.result$number.of.trades
ratio.result$number.of.trades
diff.result$winning.percentage
ratio.result$winning.percentage
diff.result$profit
ratio.result$profit
diff.result$ave.winning
ratio.result$ave.winning
diff.result$ave.losing
ratio.result$ave.losing
myvals('FAS','FAZ')
myvals('BKEP','DSX')
# Brazilian Method(diff) and Pairslog.com Method(ratio)
diff.result<-pairs.trade('FAS','FAZ',from = "2013-10-01", to = Sys.Date(),ma.days = 14,method = "diff",threshold = 2,closeout = F)
ratio.result<-pairs.trade('FAS','FAZ',from = "2013-10-01", to = Sys.Date(),ma.days = 14,method = "ratio",threshold = 2,closeout = F)
cat("The Brazilian Method(diff) approach would result in final profit of $", diff.result$profit,'\n')
cat("The Pairslog.com Method(ratio) approach would result in final profit of $", ratio.result$profit,'\n')
cat("The Brazilian Method(diff) approach would trigger", diff.result$number.of.trades,'pair trades.', "Among them,", diff.result$Winners, "are profitable.\n")
cat("The Pairslog.com Method(ratio) approach would result in final profit of $", ratio.result$number.of.trades,'pair trades.', "Among them,", ratio.result$Winners, "are profitable.\n")
cat("For Brazilian Method(diff) approach, the best pair trade made a profit of $", diff.result$max.profit, "the worst pair trade made a profit of $", diff.result$min.profit, "\n")
cat("For Pairslog.com Method(ratio) approach, the best pair trade made a profit of $", ratio.result$max.profit, "the worst pair trade made a profit of $", ratio.result$min.profit, "\n")
cat("For Brazilian Method(diff) approach, the average of the losing trades was $", diff.result$ave.losing, "the average of the winning trades was $", diff.result$ave.winning, "\n")
cat("For Pairslog.com Method(ratio) approach, the average of the losing trades was $", ratio.result$ave.losing, "the average of the winning trades was $", ratio.result$ave.winning, "\n")
diff.result$number.of.trades
ratio.result$number.of.trades
diff.result$winning.percentage
ratio.result$winning.percentage
diff.result$sharpe.ratio
ratio.result$sharpe.ratio
diff.result$profit
ratio.result$profit
diff.result$ave.winning
ratio.result$ave.winning
diff.result$ave.losing
ratio.result$ave.losing
myvals('BECN','GOV')
# Brazilian Method(diff) and Pairslog.com Method(ratio)
diff.result<-pairs.trade('BECN','GOV',from = "2013-10-01", to = Sys.Date(),ma.days = 14,method = "diff",threshold = 2,closeout = F)
ratio.result<-pairs.trade('BECN','GOV',from = "2013-10-01", to = Sys.Date(),ma.days = 14,method = "ratio",threshold = 2,closeout = F)
cat("The Brazilian Method(diff) approach would result in final profit of $", diff.result$profit,'\n')
cat("The Pairslog.com Method(ratio) approach would result in final profit of $", ratio.result$profit,'\n')
cat("The Brazilian Method(diff) approach would trigger", diff.result$number.of.trades,'pair trades.', "Among them,", diff.result$Winners, "are profitable.\n")
cat("The Pairslog.com Method(ratio) approach would result in final profit of $", ratio.result$number.of.trades,'pair trades.', "Among them,", ratio.result$Winners, "are profitable.\n")
diff.result$number.of.trades
ratio.result$number.of.trades
diff.result$winning.percentage
ratio.result$winning.percentage
diff.result$sharpe.ratio
ratio.result$sharpe.ratio
diff.result$profit
ratio.result$profit
diff.result$all.profit
diff.result$ave.winning
ratio.result$ave.winning
diff.result$ave.losing
ratio.result$ave.losing
myvals('DPW','EVM')
# Brazilian Method(diff) and Pairslog.com Method(ratio)
diff.result<-pairs.trade('DPW','EVM',from = "2013-10-01", to = Sys.Date(),ma.days = 14,method = "diff",threshold = 2,closeout = F)
ratio.result<-pairs.trade('DPW','EVM',from = "2013-10-01", to = Sys.Date(),ma.days = 14,method = "ratio",threshold = 2,closeout = F)
cat("The Brazilian Method(diff) approach would result in final profit of $", diff.result$profit,'\n')
cat("The Pairslog.com Method(ratio) approach would result in final profit of $", ratio.result$profit,'\n')
diff.result$number.of.trades
ratio.result$number.of.trades
diff.result$winning.percentage
ratio.result$winning.percentage
diff.result$sharpe.ratio
ratio.result$sharpe.ratio
diff.result$profit
ratio.result$profit
diff.result$ave.winning
ratio.result$ave.winning
diff.result$ave.losing
ratio.result$ave.losing
diff.result$profit/diff.result$number.of.trades
ratio.result$profit/ratio.result$number.of.trades
# Brazilian Method(diff) and Pairslog.com Method(ratio)
diff.result<-pairs.trade('FAS','FAZ',from = "2013-10-01", to = Sys.Date(),ma.days = 14,method = "diff",threshold = 2,closeout = F)
ratio.result<-pairs.trade('FAS','FAZ',from = "2013-10-01", to = Sys.Date(),ma.days = 14,method = "ratio",threshold = 2,closeout = F)
diff.result$profit/diff.result$number.of.trades
ratio.result$profit/ratio.result$number.of.trades
myvals('BKEP','DSX')
myvals('FAS','FAZ')
myvals('BECN','GOV')
# Brazilian Method(diff) and Pairslog.com Method(ratio)
diff.result<-pairs.trade('BECN','GOV',from = "2013-10-01", to = Sys.Date(),ma.days = 14,method = "diff",threshold = 2,closeout = F)
ratio.result<-pairs.trade('BECN','GOV',from = "2013-10-01", to = Sys.Date(),ma.days = 14,method = "ratio",threshold = 2,closeout = F)
cat("The Brazilian Method(diff) approach would result in final profit of $", diff.result$profit,'\n')
cat("The Pairslog.com Method(ratio) approach would result in final profit of $", ratio.result$profit,'\n')
diff.result$number.of.trades
ratio.result$number.of.trades
diff.result$winning.percentage
ratio.result$winning.percentage
diff.result$sharpe.ratio
ratio.result$sharpe.ratio
diff.result$profit
ratio.result$profit
diff.result$profit/diff.result$number.of.trades
ratio.result$profit/ratio.result$number.of.trades
install.packages("dplyr")
install.packages("ggplot2")
install.packages("stargazer")
install.packages("PerformanceAnalytics")
install.packages("xlsx")
library(quantmod)
library(dplyr)
library(ggplot2)
library(stargazer)
library(PerformanceAnalytics)
library(xlsx)
### Assign Fidelity sector funds into distinct industries
funds<-read.csv("E:\Course Work at Harvard\Introduction to Financial Statisitcs\Final Project Sector Momentum\Sector Fund Names.csv")
wd()
setwd("E:/Course Work at Harvard/Introduction to Financial Statisitcs/Final Project Sector Momentum")
# read in sector funds and industry assignment
funds<-read.csv("Sector Fund Names.csv")
funds%>%order_by(Industry.Assigment)
funds[order(Industry.Assigment),]
funds
funds[order(funds$Industry.Assigment),]
# industries covered
industry<-unique(funds$Industry.Assigment)
### Obtain the historical prices and monthly return
# get the monthly return for each fund and store them
return.mat<-matrix(NA,nrow = 120, ncol = nrow(funds))
colnames(return.mat)<-as.character(funds$Ticker)
for(i in 1:nrow(funds)){
ticker<-as.character(funds$Ticker[i])
price<-getSymbols(ticker, from="2007-01-01", to="2016-12-03", auto.assign = F)
return.mat[,i]<-as.numeric(monthlyReturn(price))
}
getSymbols("FNARX", from="2007-01-01", to="2016-12-03", auto.assign = F)
getSymbols("FSPFX", from="2007-01-01", to="2016-12-03", auto.assign = F)
return.mat
### The function Sector.Momentum
#   inputs:
#          from which date the trading algorithm begins: from.date
#          to which date the trading algorithm ends: to.date
#          estimation period: est.period
#          holding period: hold.period
#          number of winning sector to hold : n.win.sector
Sector.Momentum<-function(from.date,to.date,est.period,hold.period,n.win.sector){
# Initialized a place-holder for annualized returns, this will be the final return object
CAGR<-rep(NA, 120/est.period-1)
### Loop through 1st to last estimation period
for(j in 1:(120/est.period-1)){
# initialize place-holder for annualized return at each estimation period
funds$comp.ret<-rep(1,nrow(funds))
### At each estimation period j, calculate Compound Return for each fund
# temprarily store in funds$CAGR, they will change for each iteration of j estimation period
for(i in 1:nrow(funds)){
for(k in 1:est.period){
funds$comp.ret[i]<-funds$comp.ret[i]*(1+return.mat[est.period*(j-1)+k,i])
}
}
### Now, we have Compound Return for each fund during the estimation period
### select holding sectors
winning.sector<-funds%>%
group_by(Industry.Assigment)%>%
summarise(CAGR=mean(comp.ret)^(1/(est.period/12))-1)%>%
arrange(desc(CAGR))%>%
top_n(n=n.win.sector)
# select all funds within the winning sector
winning.funds<-funds%>%filter(Industry.Assigment %in% winning.sector$Industry.Assigment)%>%select(Ticker)
n.winning.funds<-length(winning.funds$Ticker)
### invest for the holding period
# select returns from previously created return matrix for those winning funds
win.return.mat<-as.matrix(return.mat[,as.vector(as.character(winning.funds$Ticker))])
# Initialize a place-holder for each winning fund's compound return during holding period
win.funds.comp.ret<-rep(1,n.winning.funds)
for(m in 1:n.winning.funds){
for(n in 1:hold.period){
win.funds.comp.ret[m]<-win.funds.comp.ret[m]*(1+win.return.mat[est.period*j+n,m])
}
}
### Now, we have compound returns for all winning funds during the holding period
# Assuming equal investing among all funds
# Calculate the final CAGR of jth estimation period:
# average of all funds' compound return, then annualize
CAGR[j]<-mean(win.funds.comp.ret)^(1/(hold.period/12))-1
}
return(CAGR)
}
### Use the function Sector.Momentum, vary estimation and hold periods, method, and number of winning sectors
est.period<-c()
hold.period<-c()
n.win.sector<-c()
CAGR<-c()
# Let estimation and hold periods to be equal, and loop through 1 to 12 month
for(i in 1:12){
# The total number of sectors is 23, we want to hold at least somewhat better than average
# Let the number of winning sectors loop through 1:10
for(j in 1:23){
CAGR.temp<-Sector.Momentum(from.date="2007-01-01", to.date="2016-12-03", est.period=i, hold.period=i,n.win.sector=j)
est.period<-c(est.period,rep(i,length(CAGR.temp)))
hold.period<-c(hold.period,rep(i,length(CAGR.temp)))
n.win.sector<-c(n.win.sector,rep(j,length(CAGR.temp)))
CAGR<-c(CAGR,CAGR.temp)
}
}
# Put them into a data.frame
momentum.CAGR<-data.frame(CAGR,est.period,hold.period,n.win.sector,method=rep("Sector Momentum",length(CAGR)))
momentum.CAGR
### If buy and hold S&P500 for the same length, such as 1-month, 2-month, and so on, what is the CAGRs?
price<-getSymbols("SPY", from="2007-01-01", to="2016-12-03", auto.assign = F)
ret<-as.numeric(monthlyReturn(price))
period<-c()
CAGR<-c()
for(i in 1:12){
for(j in 1:(120/i)){
CAGR.temp<-1
for(m in 1:i){CAGR.temp<-CAGR.temp*(1+ret[i*(j-1)+m])}
CAGR.temp<-CAGR.temp^(1/(i/12))-1
CAGR<-c(CAGR, CAGR.temp)
period<-c(period,i)
}
}
# Put them into a data.frame
SP500.CAGR<-data.frame(CAGR, est.period=period,hold.period=period,n.win.sector=rep(NA,length(CAGR)),method=rep("S&P500",length(CAGR)))
### Make a Table of comparison of various strategies
all.CAGR<-rbind(momentum.CAGR,SP500.CAGR )
temp<-all.CAGR%>%group_by(method, est.period, n.win.sector)%>%
summarise(Ave.CAGR=mean(CAGR), std.dev=sd(CAGR), Sharpe.ratio=mean(CAGR)/sd(CAGR))%>%
as.data.frame()
# output to xls file
write.xlsx(temp,"Table 3.xlsx")
### Make a Table of comparison of various strategies
all.CAGR<-rbind(momentum.CAGR,SP500.CAGR )
temp<-all.CAGR%>%group_by(method, est.period, n.win.sector)%>%
summarise(Ave.CAGR=mean(CAGR), std.dev=sd(CAGR), Sharpe.ratio=mean(CAGR)/sd(CAGR))%>%
as.data.frame()
# output to xls file
write.csv(temp,"Table 3.csv")
### Visualize
# X-axis is  Estimation & Hold Period(Month), Y is CAGR
temp%>%
ggplot(aes(x=est.period, y=Ave.CAGR, colour=factor(n.win.sector)))+
geom_point(aes(size=Ave.CAGR))+
geom_line()+
theme(panel.background=element_blank(),
plot.title = element_text(size=rel(1.5),colour = "red"),
legend.position = "bottom")+
ggtitle("Figure 1: Compound Annualized Growth Rates vs Estimation & Hold Period(Month)")+
scale_x_continuous(breaks=seq(1,12,2))+
xlab("Estimation & Hold Period (Month)")+
ylab("Average CAGR")+
facet_wrap(~method)
library(quantmod)
library(dplyr)
library(ggplot2)
library(stargazer)
library(PerformanceAnalytics)
library(xlsx)
install.packages("rJava")
library(rJava)
library(ggplot2)
# From the above visualization, we could hypothesis that, the length of estimation and hold periods has a negative effect on returns, even adjusting for number of winning sectors to hold; and only holding the top 1 sector is better than any other strategies, and the effect of number of sectors to hold may be slightly negative or even non-significant, after accounting for estimation and hold period.
fit1<-lm(CAGR~factor(est.period)+factor(n.win.sector),data=momentum.CAGR)
fit2<-lm(CAGR~est.period+n.win.sector,data=momentum.CAGR)
fit3<-lm(CAGR~factor(method)+est.period,data=all.CAGR)
stargazer(fit1,out="fit1.doc",title="Model 1: Linear Regression (Compare among Momentum Strategies)",
covariate.labels = c("2-month","3-month","4-month","5-month","6-month","7-month",
"8-month","9-month","10-month","11-month","12-month",
"2 Sectors","3 Sectors","4 Sectors","5 Sectors","6 Sectors",
"7 Sectors","8 Sectors","9 Sectors","10 Sectors","11 Sectors",
"12 Sectors","13 Sectors","14 Sectors","15 Sectors","16 Sectors",
"17 Sectors","18 Sectors","19 Sectors","20 Sectors","21 Sectors",
"22 Sectors","23 Sectors"))
stargazer(fit1,out="fit1.htm",title="Model 1: Linear Regression (Compare among Momentum Strategies)",
covariate.labels = c("2-month","3-month","4-month","5-month","6-month","7-month",
"8-month","9-month","10-month","11-month","12-month",
"2 Sectors","3 Sectors","4 Sectors","5 Sectors","6 Sectors",
"7 Sectors","8 Sectors","9 Sectors","10 Sectors","11 Sectors",
"12 Sectors","13 Sectors","14 Sectors","15 Sectors","16 Sectors",
"17 Sectors","18 Sectors","19 Sectors","20 Sectors","21 Sectors",
"22 Sectors","23 Sectors"))
stargazer(fit2,out="fit2.htm",title="Model 2: Linear Regression (Compare among Momentum Strategies)",
covariate.labels = c("Period","Number of Winning Sectors to Hold"))
stargazer(fit3,out="fit3.htm",title="Model 3: Linear Regression (Compare Momentum Strategies with S%P500)",
covariate.labels = c("Trading Strategy=S&P 500","Period"))
